console.log('–°–∫—Ä–∏–ø—Ç –Ω–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ');

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
	console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω');
	
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
	let tg = window.Telegram?.WebApp;
	if (tg) {
		console.log('Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
		tg.expand();
		
		// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ Telegram
		tg.MainButton.textColor = '#FFFFFF';
		tg.MainButton.color = '#2cab37';
	} else {
		console.log('–ó–∞–ø—É—â–µ–Ω–æ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã
	let cart = {};
	const prices = {
		1: 1000,
		2: 1200,
		3: 1500,
		4: 800,
		5: 2000,
		6: 1800
	};

	// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
	function formatOrder() {
		let orderText = 'üõç *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑*\n\n';
		let totalSum = 0;

		for (const [id, count] of Object.entries(cart)) {
			if (count > 0) {
				const itemTotal = count * prices[id];
				totalSum += itemTotal;
				orderText += `üì¶ –¢–æ–≤–∞—Ä ${id}\n`;
				orderText += `   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${count} —à—Ç.\n`;
				orderText += `   –¶–µ–Ω–∞: ${prices[id]} —Ä—É–±.\n`;
				orderText += `   –°—É–º–º–∞: ${itemTotal} —Ä—É–±.\n\n`;
			}
		}

		orderText += `\nüí∞ *–ò—Ç–æ–≥–æ: ${totalSum} —Ä—É–±.*`;

		if (tg?.initDataUnsafe?.user) {
			const user = tg.initDataUnsafe.user;
			orderText += `\n\nüë§ *–ó–∞–∫–∞–∑—á–∏–∫:*\n`;
			orderText += `${user.first_name}`;
			if (user.last_name) orderText += ` ${user.last_name}`;
			if (user.username) orderText += `\n@${user.username}`;
		}

		return {
			formatted: orderText,
			totalSum: totalSum
		};
	}

	// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
	function updateCounter(id, value) {
		const counter = document.getElementById(`counter${id}`);
		if (counter) {
			counter.textContent = value;
			console.log(`–û–±–Ω–æ–≤–ª–µ–Ω —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${id}: ${value}`);
		} else {
			console.log(`–ù–µ –Ω–∞–π–¥–µ–Ω —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${id}`);
		}
	}

	// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
	function updateCartCount() {
		const count = Object.values(cart).reduce((sum, current) => sum + current, 0);
		const cartCountElement = document.getElementById('cart-count');
		if (cartCountElement) {
			cartCountElement.textContent = count;
			console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: ${count}`);
		}
	}

	// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
	function updateCart() {
		const cartItems = document.getElementById('cart-items');
		const cartTotalAmount = document.getElementById('cart-total-amount');
		const orderButton = document.getElementById('order-button');
		let total = 0;
		
		if (!cartItems || !cartTotalAmount) {
			console.log('–ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ä–∑–∏–Ω—ã');
			return;
		}
		
		cartItems.innerHTML = '';
		
		for (const [id, count] of Object.entries(cart)) {
			if (count > 0) {
				const itemTotal = count * prices[id];
				total += itemTotal;
				
				const cartItem = document.createElement('div');
				cartItem.className = 'cart-item';
				cartItem.innerHTML = `
					<span>–¢–æ–≤–∞—Ä ${id}</span>
					<span>${count} —à—Ç. √ó ${prices[id]} —Ä—É–±. = ${itemTotal} —Ä—É–±.</span>
				`;
				cartItems.appendChild(cartItem);
			}
		}
		
		cartTotalAmount.textContent = total;
		console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—É–º–º–∞ –∫–æ—Ä–∑–∏–Ω—ã: ${total} —Ä—É–±.`);

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫–∞–∑–∞
		if (orderButton) {
			if (total > 0) {
				orderButton.style.display = 'block';
			} else {
				orderButton.style.display = 'none';
			}
		}
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ (+ –∏ -)
	document.addEventListener('click', function(e) {
		if (e.target.classList.contains('counter-btn')) {
			e.preventDefault();
			const id = e.target.dataset.id;
			const isPlus = e.target.classList.contains('plus');
			
			console.log(`–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ ${isPlus ? '–ø–ª—é—Å' : '–º–∏–Ω—É—Å'} –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${id}`);
			
			if (!cart[id]) {
				cart[id] = 0;
			}
			
			if (isPlus) {
				cart[id]++;
			} else if (cart[id] > 0) {
				cart[id]--;
			}
			
			console.log(`${isPlus ? '–£–≤–µ–ª–∏—á–µ–Ω–æ' : '–£–º–µ–Ω—å—à–µ–Ω–æ'} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ ${id}: ${cart[id]}`);
			updateCounter(id, cart[id]);
			updateCartCount();
			updateCart();
		}
	});

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
	const cartIcon = document.getElementById('cart-icon');
	if (cartIcon) {
		cartIcon.addEventListener('click', () => {
			const cartElement = document.getElementById('cart');
			if (cartElement) {
				cartElement.classList.toggle('active');
				console.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã');
			}
		});
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤"
	const orderButton = document.getElementById('order-button');
	const orderPage = document.getElementById('order-page');
	const backToCartButton = document.getElementById('back-to-cart');
	const submitOrderButton = document.getElementById('submit-order');
	const paymentMethods = document.querySelectorAll('.payment-method');
	let selectedPaymentMethod = null;

	if (orderButton) {
		orderButton.addEventListener('click', () => {
			const order = formatOrder();
			if (order.totalSum > 0) {
				// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
				orderPage.classList.add('active');
				// –°–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
				const cartElement = document.getElementById('cart');
				if (cartElement) {
					cartElement.classList.remove('active');
				}
			}
		});
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–æ—Ä–∑–∏–Ω–µ
	if (backToCartButton) {
		backToCartButton.addEventListener('click', () => {
			orderPage.classList.remove('active');
			const cartElement = document.getElementById('cart');
			if (cartElement) {
				cartElement.classList.add('active');
			}
		});
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã
	paymentMethods.forEach(method => {
		method.addEventListener('click', () => {
			paymentMethods.forEach(m => m.classList.remove('active'));
			method.classList.add('active');
			selectedPaymentMethod = method.dataset.method;
		});
	});

	// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
	const phoneInput = document.getElementById('phone');
	if (phoneInput) {
		phoneInput.addEventListener('input', function(e) {
			let value = e.target.value.replace(/\D/g, '');
			if (value.length > 0) {
				if (value[0] === '7' || value[0] === '8') {
					value = value.substring(1);
				}
				let formattedValue = '+7';
				if (value.length > 0) {
					formattedValue += ' (' + value.substring(0, 3);
				}
				if (value.length > 3) {
					formattedValue += ') ' + value.substring(3, 6);
				}
				if (value.length > 6) {
					formattedValue += '-' + value.substring(6, 8);
				}
				if (value.length > 8) {
					formattedValue += '-' + value.substring(8, 10);
				}
				e.target.value = formattedValue;
			}
		});
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
	if (submitOrderButton) {
		submitOrderButton.addEventListener('click', () => {
			const fullName = document.getElementById('fullName').value;
			const phone = document.getElementById('phone').value;
			const city = document.getElementById('city').value;
			const address = document.getElementById('address').value;

			if (!fullName || !phone || !city || !address || !selectedPaymentMethod) {
				alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
				return;
			}

			const orderDetails = {
				type: 'order',
				payload: {
					...formatOrder(),
					customerInfo: {
						fullName,
						phone,
						city,
						address,
						paymentMethod: selectedPaymentMethod
					}
				}
			};

			if (tg) {
				tg.sendData(JSON.stringify(orderDetails));
				console.log('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram');
			} else {
				console.log('–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω:', orderDetails);
				alert('–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.');
			}

			// –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ —Å–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–∞
			cart = {};
			updateCartCount();
			updateCart();
			orderPage.classList.remove('active');
		});
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
	updateCart();
});
